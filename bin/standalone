#!/usr/bin/env node
/* Copyright 2019 Ling Zhang

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License. */

var e,t=(e=require("chalk"))&&"object"==typeof e&&"default"in e?e.default:e,s=require("path"),r=require("fs"),i=require("semver"),o=require("typescript"),n=require("child_process"),a=require("events");function c(e){if(r.existsSync(e)){const t=r.statSync(e);if(t.isFile())return t.path=e,t}}function h(e,t){if(!s.isAbsolute(e))return;let r=e+s.sep+1102;do{r=s.dirname(r);const e=c(s.join(r,t));if(e)return e}while(r.length>1)}const l=new Map;class PackageFiles{static ImportFromFile(e){try{const o=r.readFileSync(e,{encoding:"utf8"}),n=JSON.parse(o);for(const t of["main","typings","module"])n[t]&&(s.isAbsolute(n[t])||(n[t]=s.resolve(s.dirname(e),n[t])));if(n.engines&&n.engines.node&&!i.satisfies(process.version,n.engines.node)&&(console.log(t.red(`You are using Node ${process.version}, but ${n.name}@${n.version} `+`requires Node ${n.engines.node}.`)),process.exit(1)),n.engines&&n.engines.typescript){const e=l.get("typescript");if(!e)return console.log(t.red("ERROR: No typescript found. exiting...")),process.exit(1);i.satisfies(e.version,n.engines.typescript)||(console.log(t.red(`You are using typescript ${e.version}, but ${n.name}@${n.version} `+`requires typescript ${n.engines.typescript}.`)),process.exit(1))}return l.set(n.name,n),n}catch(e){return}}static Get(e){return l.get(e)}}class PackageFileResolver{static FromPath(e){const t=h(e,"package.json");if(t)return PackageFiles.ImportFromFile(t.path)}static FromName(e){const t=h(process.cwd(),s.join("node_modules",e,"package.json"));if(t)return PackageFiles.ImportFromFile(t.path);const r=require.resolve.paths(e);try{const t=require.resolve(e);if(t){const e=PackageFileResolver.FromPath(t);if(e)return e}}catch(e){}if(Array.isArray(r))for(const t of r){const r=c(s.join(t,e,"package.json"));if(r)return PackageFiles.ImportFromFile(r.path)}}}class Thread extends a.EventEmitter{constructor(e,t,s){super();const r=this.handler=n.fork(e,t,s);let i,o;r.unref(),this.started=new Promise(e=>{i=e}),this.stopped=new Promise(e=>{o=e}),r.on("message",e=>{this.initialized=!0,"required"===e.type&&(this.handler.removeAllListeners("message"),this.emit("start"),this.handler.send({type:"rs"}),i())}),this.handler.once("error",e=>{this.initialized=!0,console.log("fork process error exited",e),this.emit("error",e),o()}),r.once("close",e=>{this.initialized=!0,this.emit("stop",e),o()}),r.once("exit",e=>{this.initialized=!0,this.emit("stop",e),o()})}cache(e){this.initialized=!0,this.handler.send({type:"cache",value:e})}require(e){this.initialized=!0,this.handler.send({type:"require",value:e})}progress(e,t){this.handler.send({type:"progress",value:{method:e,options:t}})}stop(){this.initialized=!0,this.handler.kill("SIGTERM")}}class TypeScriptProgram{constructor(e,t,s){if(this.runtimeFile=e,this.entryFile=t,this.currentCommand="",this.commands=[],this.thread=this.create(),this.files=new Map,!o.findConfigFile(__dirname,o.sys.fileExists,"package.json"))throw new Error('Could not find "package.json"');this.configPath=s,this.thread.progress("info","(1/5) Load: "+s),this.sys=Object.assign({},o.sys,{writeFile:(e,t)=>{const s=e.slice(0,e.length-3)+".ts";this.files.set(s,t),3===this.phase&&this.progress("info","(3/5) Analysing...done",4),this.progress("start","(4/5) Compiling "+s)}})}create(){const e=this.thread=new Thread(this.runtimeFile,[this.entryFile],{cwd:process.cwd(),env:process.env});return e.on("start",()=>{this.started()}),e.on("error",e=>{this.stopped(e)}),e.on("stop",e=>{this.stopped(e)}),e}start(){if(this.currentCommand)return;if(this.thread&&this.thread.initialized)return;this.currentCommand="start";const e=this.thread=this.thread||this.create();for(const t of this.files.entries())e.cache(t);this.progress("info","(5/5) Executing "+this.entryFile),e.require(this.entryFile)}started(){this.state="started",this.currentCommand="",this.next()}stop(){this.currentCommand||(this.thread?(this.currentCommand="stop",this.thread.stop()):this.stopped())}stopped(e){"started"!==this.state||this.currentCommand||12!==e&&null!==e||this.commands.push("start"),this.state="stopped",this.thread=void 0,this.currentCommand="",this.next()}progress(e,t,s){s&&(this.phase=s),this.thread&&this.thread.progress(e,t)}touch(e){"started"===this.state&&this.commands.push("stop"),e&&this.commands.push("start"),this.currentCommand||this.next()}next(){if(this.commands.length){const e=this.commands.shift();"start"===e?this.start():"stop"===e&&this.stop()}}}class TypeScriptWatcher{constructor(e){this.program=e,this.format={getCanonicalFileName:e=>e,getCurrentDirectory:o.sys.getCurrentDirectory,getNewLine:()=>o.sys.newLine}}start(){const e=o.createEmitAndSemanticDiagnosticsBuilderProgram,t=o.createWatchCompilerHost(this.program.configPath,{noEmit:!1,declaration:!1,sourceMap:!1,inlineSourceMap:!0,incremental:!0,tsBuildInfoFile:".tsbuildinfo.js"},this.program.sys,e,e=>{console.error("Compilation Error",e.code,":",o.flattenDiagnosticMessageText(e.messageText,this.format.getNewLine()))},e=>{e.code,6032===e.code&&this.program.touch(),6194===e.code&&"string"==typeof e.messageText&&e.messageText.startsWith("Found 0 errors")&&(this.program.progress("info","(4/5) Compiling...done"),setImmediate(()=>{this.program.touch(!0)}))}),s=t.createProgram;t.createProgram=((e,t,r,i)=>(this.program.progress("start","(2/5) Initializing..."),s(e,t,r,i)));const r=t.afterProgramCreate;t.afterProgramCreate=(e=>{this.program.progress("info","(2/5) Initializing...done"),this.program.progress("start","(3/5) Analysing...",3),r(e)}),this.watcher=o.createWatchProgram(t)}}class TypeScriptEngine{start(e,t,s){const r=new TypeScriptProgram(e,t,s);new TypeScriptWatcher(r).start()}}class TSConfigResolver{static FromPath(e){const t=h(e,"tsconfig.json");if(t)return t.path}}!function(){process.stdout.write("[2J");const e=PackageFileResolver.FromName("typescript");if(!e)return;const r=PackageFileResolver.FromPath(function(e){const{stackTraceLimit:t}=Error;Error.stackTraceLimit=e;const s={stack:""};Error.captureStackTrace(s),Error.stackTraceLimit=t;const r=s.stack.split("\n"),i=r[r.length-1],o=i.indexOf("("),n=i.lastIndexOf(")");let a;const c=(a=o>0&&n>0?i.slice(o+1,n):i.slice(i.indexOf("at")+3)).lastIndexOf(":"),h=a.lastIndexOf(":",c-1);return a.slice(0,h)}(2));if(!r)return console.log(t.red("ERROR: No package.json found. exiting...")),process.exit(1);const i=process.argv.slice(3)[3]||"src/bin/standalone.ts";if(!i)return console.log(t.red("ERROR: No .ts file to run")),process.exit(1);let n;n=s.isAbsolute(i)?i:s.resolve(process.cwd(),i);const a=TSConfigResolver.FromPath(n);if(!a)return console.log(t.red("ERROR: No tsconfig.json found")),process.exit(1);const c=s.resolve(__dirname,"../lib/index.js");if(!o.sys.fileExists(c))return console.log(t.red("ERROR: No typescript runtime installed.")),process.exit(1);console.log(t.yellow("[ Unregistered ]")+t.white(` ${r.name} v${r.version}, typescript v${e.version}, node ${process.version}`)),(new TypeScriptEngine).start(c,n,a)}();
//# sourceMappingURL=standalone.map
